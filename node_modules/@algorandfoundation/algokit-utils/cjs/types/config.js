"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdatableConfig = void 0;
const logging_1 = require("./logging");
/** Updatable AlgoKit config */
class UpdatableConfig {
    config;
    get logger() {
        return this.config.logger;
    }
    get debug() {
        return this.config.debug;
    }
    /**
     * Returns the current logger, or the null logger if true is passed in to `returnNullLogger`
     * @param returnNullLogger Whether or not to return the null logger
     * @returns The requested logger
     */
    getLogger(returnNullLogger) {
        if (returnNullLogger) {
            return logging_1.nullLogger;
        }
        return this.logger;
    }
    /**
     * Temporarily run with debug set to true.
     * @param lambda A lambda expression with code to run with debug config set to true
     */
    withDebug(lambda) {
        const original = this.config.debug;
        try {
            this.config.debug = true;
            lambda();
        }
        finally {
            this.config.debug = original;
        }
    }
    constructor() {
        this.config = {
            logger: logging_1.consoleLogger,
            debug: false,
        };
    }
    /**
     * Update the AlgoKit configuration with your own configuration settings
     * @param newConfig Partial or complete config to replace
     */
    configure(newConfig) {
        this.config = { ...this.config, ...newConfig };
    }
}
exports.UpdatableConfig = UpdatableConfig;
//# sourceMappingURL=config.js.map