"use strict";
/* eslint-disable max-classes-per-file */
/* eslint-disable class-methods-use-this */
/* eslint-disable no-unused-vars */
/* eslint-disable @typescript-eslint/no-explicit-any */
/* eslint-disable no-undef */
/// <reference path="../../types/global.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
exports.PendingGroup = void 0;
class PendingGroup {
    /**
     * Adds ABI method to the pending transaction group. The two type arguments in combination with the
     * name argument are used to form the the method signature to ensure typesafety.
     *
     * @typeParam ArgsType - A tuple type corresponding to the types of the method arguments
     * @typeParam ReturnType - The return type of the method
     *
     * @param params - The parameters of the method call
     *
     */
    addMethodCall(params) { }
    addPayment(params) { }
    addAppCall(params) { }
    addAssetTransfer(params) { }
    addAssetCreation(params) { }
    addOnlineKeyRegistration(params) { }
    addOfflineKeyRegistration(params) { }
    addAssetConfig(params) { }
    addAssetFreeze(params) { }
    submit() { }
}
exports.PendingGroup = PendingGroup;
class Contract {
    /**
     * The method called when creating the application. The default create method will
     * allow the contract to be created via a bare NoOp appcall and throw an error if called
     * with any arguments.
     */
    createApplication(...args) {
        if (args.length > 0) {
            throw Error();
        }
    }
    /**
     * The method called when attempting to update the application. The default update method will
     * always throw an error
     */
    updateApplication(...args) {
        throw Error();
    }
    /**
     * The method called when attempting to delete the application. The default delete method will
     * always throw an error
     */
    deleteApplication(...args) {
        throw Error();
    }
    /**
     * The method called when an account opts-in to the application. The default opt-in method will
     * always throw an error
     */
    optInToApplication(...args) {
        throw Error();
    }
    /**
     * The method called when an account closes out their local state. The default close-out method
     * will always throw an error
     */
    closeOutOfApplication(...args) {
        throw Error();
    }
    /**
     * The method called when an account clears their local state. The default ClearState
     * method does nothing. ClearState will always allow a user to delete their local state,
     * reagrdless of logic.
     */
    clearState() { }
}
exports.default = Contract;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJhY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGliL2NvbnRyYWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSx5Q0FBeUM7QUFDekMsMkNBQTJDO0FBQzNDLG1DQUFtQztBQUNuQyx1REFBdUQ7QUFDdkQsNkJBQTZCO0FBQzdCLGdEQUFnRDs7O0FBRWhELE1BQWEsWUFBWTtJQUN2Qjs7Ozs7Ozs7O09BU0c7SUFDSCxhQUFhLENBQXVCLE1BQTBDLElBQVMsQ0FBQztJQUV4RixVQUFVLENBQUMsTUFBNkIsSUFBUyxDQUFDO0lBRWxELFVBQVUsQ0FBQyxNQUF5QixJQUFTLENBQUM7SUFFOUMsZ0JBQWdCLENBQUMsTUFBbUMsSUFBUyxDQUFDO0lBRTlELGdCQUFnQixDQUFDLE1BQWlDLElBQVMsQ0FBQztJQUU1RCx3QkFBd0IsQ0FBQyxNQUFrQyxJQUFTLENBQUM7SUFFckUseUJBQXlCLENBQUMsTUFBdUMsSUFBUyxDQUFDO0lBRTNFLGNBQWMsQ0FBQyxNQUFpQyxJQUFTLENBQUM7SUFFMUQsY0FBYyxDQUFDLE1BQWlDLElBQVMsQ0FBQztJQUUxRCxNQUFNLEtBQVUsQ0FBQztDQUNsQjtBQTlCRCxvQ0E4QkM7QUFFRCxNQUE4QixRQUFRO0lBZ0NwQzs7OztPQUlHO0lBQ0gsaUJBQWlCLENBQUMsR0FBRyxJQUFXO1FBQzlCLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbkIsTUFBTSxLQUFLLEVBQUUsQ0FBQztTQUNmO0lBQ0gsQ0FBQztJQUVEOzs7T0FHRztJQUNILGlCQUFpQixDQUFDLEdBQUcsSUFBVztRQUM5QixNQUFNLEtBQUssRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxpQkFBaUIsQ0FBQyxHQUFHLElBQVc7UUFDOUIsTUFBTSxLQUFLLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsa0JBQWtCLENBQUMsR0FBRyxJQUFXO1FBQy9CLE1BQU0sS0FBSyxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7T0FHRztJQUNILHFCQUFxQixDQUFDLEdBQUcsSUFBVztRQUNsQyxNQUFNLEtBQUssRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsVUFBVSxLQUFVLENBQUM7Q0FDdEI7QUFqRkQsMkJBaUZDIn0=