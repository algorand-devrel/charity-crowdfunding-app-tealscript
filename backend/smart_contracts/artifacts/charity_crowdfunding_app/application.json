{
  "hints": {
    "authorizeCreator()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optInAsset(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "bootstrap(string,string,uint64,uint64,pay,string,string,uint64,string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "fund(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claimFund()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteApplication()void": {
      "call_config": {
        "delete_application": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE",
    "opt_in": "CALL",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "CALL"
  },
  "schema": {
    "local": {
      "declared": {
        "donatorInfo": {
          "type": "uint64",
          "key": "donatorInfo"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "goal": {
          "type": "uint64",
          "key": "goal"
        },
        "detail": {
          "type": "bytes",
          "key": "detail"
        },
        "title": {
          "type": "bytes",
          "key": "title"
        },
        "fundRaised": {
          "type": "uint64",
          "key": "fundRaised"
        },
        "donatorNum": {
          "type": "uint64",
          "key": "donatorNum"
        },
        "minDonation": {
          "type": "uint64",
          "key": "minDonation"
        },
        "active": {
          "type": "uint64",
          "key": "active"
        },
        "rewardNftId": {
          "type": "uint64",
          "key": "rewardNftId"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 6
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 1
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "charityCrowdfundingApp",
    "desc": "",
    "methods": [
      {
        "name": "authorizeCreator",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "optInAsset",
        "args": [
          {
            "name": "assetId",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "bootstrap",
        "args": [
          {
            "name": "title",
            "type": "string",
            "desc": ""
          },
          {
            "name": "detail",
            "type": "string",
            "desc": ""
          },
          {
            "name": "goal",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "minDonation",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "mbrPay",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "assetName",
            "type": "string",
            "desc": ""
          },
          {
            "name": "unitName",
            "type": "string",
            "desc": ""
          },
          {
            "name": "nftAmount",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "assetUrl",
            "type": "string",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "optInToApplication",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "fund",
        "args": [
          {
            "name": "fundPay",
            "type": "pay",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "claimFund",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "deleteApplication",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}