{
    "hints": {
        "bootstrap(string,string,uint64,uint64,pay,string,string,uint64,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "fund(pay,pay,asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claimFund()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete_donator_info(account)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_details()string": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 6,
            "num_uints": 6
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "active": {
                    "type": "uint64",
                    "key": "active",
                    "descr": "Status of the Fundraiser"
                },
                "donator_num": {
                    "type": "uint64",
                    "key": "donator_num",
                    "descr": "Number of donators who donated"
                },
                "fund_raised": {
                    "type": "uint64",
                    "key": "fund_raised",
                    "descr": "Amount of Algos raised"
                },
                "goal": {
                    "type": "uint64",
                    "key": "goal",
                    "descr": "The Fundraiser's Goal"
                },
                "min_donation": {
                    "type": "uint64",
                    "key": "min_donation",
                    "descr": "minimum amount of donation people can donate"
                },
                "reward_nft_id": {
                    "type": "uint64",
                    "key": "reward_nft_id",
                    "descr": "ID of the reward NFT"
                },
                "title": {
                    "type": "bytes",
                    "key": "title",
                    "descr": "Title of the fundraiser"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "charity_crowdfunding_app",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "string",
                        "name": "title"
                    },
                    {
                        "type": "string",
                        "name": "detail"
                    },
                    {
                        "type": "uint64",
                        "name": "goal"
                    },
                    {
                        "type": "uint64",
                        "name": "min_donate"
                    },
                    {
                        "type": "pay",
                        "name": "mbr_pay"
                    },
                    {
                        "type": "string",
                        "name": "asset_name"
                    },
                    {
                        "type": "string",
                        "name": "unit_name"
                    },
                    {
                        "type": "uint64",
                        "name": "nft_amount"
                    },
                    {
                        "type": "string",
                        "name": "asset_url"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "fund",
                "args": [
                    {
                        "type": "pay",
                        "name": "mbr_pay"
                    },
                    {
                        "type": "pay",
                        "name": "fund_pay"
                    },
                    {
                        "type": "asset",
                        "name": "nft"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "claimFund",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "delete_donator_info",
                "args": [
                    {
                        "type": "account",
                        "name": "donator"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_details",
                "args": [],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "delete_application": "CALL",
        "no_op": "CREATE"
    }
}